package tokens

var Runes = map[rune]Type{
	'(': LParen,
	')': RParen,
	'*': Asterisk,
	'+': Plus,
	',': Comma,
	'-': Minus,
	'.': Dot,
	'/': Divide,
	':': Colon,
	'<': LT,
	'=': Assign,
	'>': GT,
	'?': Question,
	'@': Builtin,
	'[': LBracket,
	']': RBracket,
	'{': LBrace,
	'}': RBrace,
	'!': Not,
	'~': Tilde,
	'|': Pipe,
}

var Keywords = map[string]Type{
	"and":        And,
	"any":        Any,
	"ascii":      ASCII,
	"async":      Async,
	"bool":       Bool,
	"break":      Break,
	"case":       Case,
	"const":      Constant,
	"context":    Context,
	"complex32":  Complex32,
	"complex64":  Complex64,
	"complex128": Complex128,
	"default":    Default,
	"else":       Else,
	"enum":       Enum,
	"export":     Export,
	"error":      Error,
	"false":      False,
	"float16":    Float16,
	"float32":    Float32,
	"float64":    Float64,
	"func":       Function,
	"goimport":   GoImport,
	"if":         If,
	"import":     Import,
	"int8":       Int8,
	"int16":      Int16,
	"int32":      Int32,
	"int64":      Int64,
	"int128":     Int128,
	"package":    Package,
	"proc":       Procedure,
	"or":         Or,
	"return":     Return,
	"select":     Select,
	"set":        Set,
	"string":     String,
	"struct":     Struct,
	"switch":     Switch,
	"true":       True,
	"uint8":      Uint8,
	"uint16":     Uint16,
	"uint32":     Uint32,
	"uint64":     Uint64,
	"uint128":    Uint128,
	"utf8":       UTF8,
	"xor":        Xor,
}

var Types = map[Type]struct{}{
	Any:        {},
	ASCII:      {},
	Bool:       {},
	Complex32:  {},
	Complex64:  {},
	Complex128: {},
	Context:    {},
	Error:      {},
	Float16:    {},
	Float32:    {},
	Float64:    {},
	Int8:       {},
	Int16:      {},
	Int32:      {},
	Int64:      {},
	Int128:     {},
	String:     {},
	Struct:     {},
	Uint8:      {},
	Uint16:     {},
	Uint32:     {},
	Uint64:     {},
	Uint128:    {},
	UTF8:       {},
}

var FuncTypes = map[Type]struct{}{
	Function:  {},
	Procedure: {},
}
